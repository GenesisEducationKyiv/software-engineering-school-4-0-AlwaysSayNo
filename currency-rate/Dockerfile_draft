FROM golang:1.22.3-bullseye AS build

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY ../go.mod go.sum ./

# Завантажуємо та встановлюємо інструмент migrate
RUN go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

RUN --mount=type=cache,target=/go/pkg/mod \
  --mount=type=cache,target=/root/.cache/go-build \
  go mod download

COPY .. .

# Compile application during build rather than at runtime
# Add flags to statically link binary
RUN go build \
  -ldflags="-linkmode external -extldflags -static" \
  -tags netgo \
  -o api-golang ./cmd/main.go

####
FROM alpine:latest AS app

# Set gin mode
ENV GIN_MODE=release

# Install necessary packages
RUN apk update && apk add --no-cache ca-certificates tzdata bash

WORKDIR /

# Copy the app binary from the build stage
COPY --from=build /app/api-golang ./api-golang

# Copy migrate binary
COPY --from=build /go/bin/migrate /usr/local/bin/migrate

# Expose port 8080 to the outside world
EXPOSE 8080

# Command to run the executable
CMD ["./api-golang"]